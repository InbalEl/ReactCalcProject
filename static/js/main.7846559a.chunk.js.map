{"version":3,"sources":["components/CalculatorButton/CalculatorButton.jsx","App.js","components/CalculatorScreen/CalculatorScreen.jsx","reportWebVitals.js","index.js"],"names":["CalculatorButton","props","onClick","onCalcPress","value","App","useState","screenVal","setScreenVal","onCalcPressHandler","char","console","log","eval","className","displayVal","CalculatorScreen","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uGAAA,iBAaeA,IAXf,SAA0BC,GAMtB,OACI,wBAAQC,QALZ,WACID,EAAME,YAAYF,EAAMG,QAIxB,SAAkCH,EAAMG,U,q9BCHhD,SAASC,MAEP,cAAkCC,oDAAS,IAA3C,oMAAOC,UAAP,cAAkBC,aAAlB,cAEA,SAASC,mBAAmBC,MAC1BC,QAAQC,IAAIF,MAGVF,aADW,MAATE,KACW,GAEG,MAATA,KACMG,KAAKN,WAGLA,UAAYG,MAI7B,OACE,mEAAKI,UAAU,MAAf,UACE,2DAAC,6EAAD,CAAkBC,WAAYR,YAC9B,oEACA,2DAAC,6EAAD,CAAkBJ,YAAaM,mBAAoBL,MAAM,MACzD,2DAAC,6EAAD,CAAkBD,YAAaM,mBAAoBL,MAAM,MACzD,2DAAC,6EAAD,CAAkBD,YAAaM,mBAAoBL,MAAM,MACzD,oEACA,2DAAC,6EAAD,CAAkBD,YAAaM,mBAAoBL,MAAM,MACzD,2DAAC,6EAAD,CAAkBD,YAAaM,mBAAoBL,MAAM,MACzD,2DAAC,6EAAD,CAAkBD,YAAaM,mBAAoBL,MAAM,MACzD,oEACA,2DAAC,6EAAD,CAAkBD,YAAaM,mBAAoBL,MAAM,MACzD,2DAAC,6EAAD,CAAkBD,YAAaM,mBAAoBL,MAAM,MACzD,2DAAC,6EAAD,CAAkBD,YAAaM,mBAAoBL,MAAM,MACzD,oEACA,2DAAC,6EAAD,CAAkBD,YAAaM,mBAAoBL,MAAM,MACzD,2DAAC,6EAAD,CAAkBD,YAAaM,mBAAoBL,MAAM,MACzD,2DAAC,6EAAD,CAAkBD,YAAaM,mBAAoBL,MAAM,MACzD,2DAAC,6EAAD,CAAkBD,YAAaM,mBAAoBL,MAAM,MACzD,oEACA,2DAAC,6EAAD,CAAkBD,YAAaM,mBAAoBL,MAAM,MACzD,2DAAC,6EAAD,CAAkBD,YAAaM,mBAAoBL,MAAM,SAMhDC,2B,6BCpDf,iBAQeW,IANf,SAA0Bf,GACtB,OACI,uBAAOG,MAAOH,EAAMc,WAAYE,UAAQ,M,qKCQjCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACxB,EAAA,EAAD,MAEFyB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7846559a.chunk.js","sourcesContent":["import \"./CalculatorButton.css\";\n\nfunction CalculatorButton(props) {\n    \n    function onClickHandler() {\n        props.onCalcPress(props.value)\n    }\n    \n    return (\n        <button onClick={onClickHandler}>{props.value}</button>\n    )\n}\n\nexport default CalculatorButton","import './App.css';\nimport CalculatorButton from './components/CalculatorButton/CalculatorButton';\nimport CalculatorScreen from './components/CalculatorScreen/CalculatorScreen';\nimport { useState } from 'react';\n\n\nfunction App() {\n  \n  const [screenVal, setScreenVal] = useState('')\n\n  function onCalcPressHandler(char) {\n    console.log(char)\n\n    if (char === 'C') {\n      setScreenVal('')\n    }\n    else if (char === '=') {\n      setScreenVal(eval(screenVal))\n    }\n    else {\n      setScreenVal(screenVal + char)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <CalculatorScreen displayVal={screenVal}/>\n      <br/>\n      <CalculatorButton onCalcPress={onCalcPressHandler} value='1'/>\n      <CalculatorButton onCalcPress={onCalcPressHandler} value='2'/>\n      <CalculatorButton onCalcPress={onCalcPressHandler} value='3'/>\n      <br/>\n      <CalculatorButton onCalcPress={onCalcPressHandler} value='4'/>\n      <CalculatorButton onCalcPress={onCalcPressHandler} value='5'/>\n      <CalculatorButton onCalcPress={onCalcPressHandler} value='6'/>\n      <br/>\n      <CalculatorButton onCalcPress={onCalcPressHandler} value='7'/>\n      <CalculatorButton onCalcPress={onCalcPressHandler} value='8'/>\n      <CalculatorButton onCalcPress={onCalcPressHandler} value='9'/>\n      <br/>\n      <CalculatorButton onCalcPress={onCalcPressHandler} value='-'/>\n      <CalculatorButton onCalcPress={onCalcPressHandler} value='+'/>\n      <CalculatorButton onCalcPress={onCalcPressHandler} value='*'/>\n      <CalculatorButton onCalcPress={onCalcPressHandler} value='/'/>\n      <br/>\n      <CalculatorButton onCalcPress={onCalcPressHandler} value='='/>\n      <CalculatorButton onCalcPress={onCalcPressHandler} value='C'/>\n\n    </div>\n  );\n}\n\nexport default App;\n","import './CalculatorScreen.css'\n\nfunction CalculatorScreen(props) {\n    return (\n        <input value={props.displayVal} disabled/>\n    )\n}\n\nexport default CalculatorScreen","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}